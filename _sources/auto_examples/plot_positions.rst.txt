
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_positions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_positions.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_positions.py:


========================
Plot electrode positions
========================

.. currentmodule:: eeg_positions

.. GENERATED FROM PYTHON SOURCE LINES 10-11

We need to import some functions.

.. GENERATED FROM PYTHON SOURCE LINES 11-14

.. code-block:: default


    from eeg_positions import get_elec_coords, plot_coords








.. GENERATED FROM PYTHON SOURCE LINES 15-17

Get the electrode positions!
Let's start with the basic 10-20 system in 2 dimensions (``"x"`` and ``"y"``).

.. GENERATED FROM PYTHON SOURCE LINES 17-26

.. code-block:: default


    coords = get_elec_coords(
        system="1020",
        dim="2d",
    )

    # `coords` is a pandas.DataFrame object
    coords.head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>label</th>
          <th>x</th>
          <th>y</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>C3</td>
          <td>-0.324931</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>1</th>
          <td>C4</td>
          <td>0.324931</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>2</th>
          <td>Cz</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>3</th>
          <td>F3</td>
          <td>-0.274417</td>
          <td>0.346683</td>
        </tr>
        <tr>
          <th>4</th>
          <td>F4</td>
          <td>0.274417</td>
          <td>0.346683</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 27-30

Now let's plot these coordinates.
We can supply some style arguments to :func:`eeg_positions.plot_coords` to control
the color of the scatter dots, and the text annotations.

.. GENERATED FROM PYTHON SOURCE LINES 30-38

.. code-block:: default


    fig, ax = plot_coords(
        coords, scatter_kwargs=dict(color="green"), text_kwargs=dict(fontsize=10)
    )

    ax.axis("off")
    fig




.. image-sg:: /auto_examples/images/sphx_glr_plot_positions_001.png
   :alt: plot positions
   :srcset: /auto_examples/images/sphx_glr_plot_positions_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x480 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 39-42

Notice in the above plot, that the "landmarks" are there: ``NAS``, ``LPA``,
and ``RPA``. We can drop these by passing the ``drop_landmarks=True`` to
:func:`get_elec_coords`.

.. GENERATED FROM PYTHON SOURCE LINES 42-57

.. code-block:: default


    coords = get_elec_coords(
        system="1020",
        drop_landmarks=True,
        dim="2d",
    )


    fig, ax = plot_coords(
        coords, scatter_kwargs=dict(color="green"), text_kwargs=dict(fontsize=10)
    )

    ax.axis("off")
    fig




.. image-sg:: /auto_examples/images/sphx_glr_plot_positions_002.png
   :alt: plot positions
   :srcset: /auto_examples/images/sphx_glr_plot_positions_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x480 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 58-59

We can also plot in 3D. Let's pick a system with more electrodes now.

.. GENERATED FROM PYTHON SOURCE LINES 59-71

.. code-block:: default


    coords = get_elec_coords(
        system="1010",
        drop_landmarks=True,
        dim="3d",
    )


    fig, ax = plot_coords(coords, text_kwargs=dict(fontsize=7))

    fig




.. image-sg:: /auto_examples/images/sphx_glr_plot_positions_003.png
   :alt: plot positions
   :srcset: /auto_examples/images/sphx_glr_plot_positions_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x480 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 72-75

When using these commands from an interactive Python session, try to set
the Ipython magic `%matplotlib qt`, which will allow you to freely view the 3d
plot and rotate the camera.


.. _sphx_glr_download_auto_examples_plot_positions.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_positions.py <plot_positions.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_positions.ipynb <plot_positions.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
